<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.dao.QuitMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.Quit">
    <id column="q_id" jdbcType="INTEGER" property="qId" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="quit_date" jdbcType="DATE" property="quitDate" />
    <result column="quit_type" jdbcType="INTEGER" property="quitType" />
    <result column="departure" jdbcType="VARCHAR" property="departure" />
    <result column="entering" jdbcType="INTEGER" property="entering" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <resultMap id="WithEmpMap" type="com.neuedu.pojo.Quit">
    <id column="q_id" jdbcType="INTEGER" property="qId" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="quit_date" jdbcType="DATE" property="quitDate" />
    <result column="quit_type" jdbcType="INTEGER" property="quitType" />
    <result column="departure" jdbcType="VARCHAR" property="departure" />
    <result column="entering" jdbcType="INTEGER" property="entering" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <association property="emp" javaType="com.neuedu.pojo.Emp">
      <id column="e_id" property="eId"/>
      <result column="name" property="name"/>
      <result column="sex" property="sex"/>
      <result column="dept_id" property="deptId"/>
      <result column="job_id" property="jobId"/>
    </association>
    <association property="dept" javaType="com.neuedu.pojo.Dept">
      <id column="d_id" property="dId"/>
      <result column="dept_name" property="deptName"/>
    </association>
    <association property="job" javaType="com.neuedu.pojo.Job">
      <id column="j_id" property="jId"/>
      <result column="job_name" property="jobName"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    q_id, emp_id, quit_date, quit_type, departure, entering, remarks
  </sql>
  <sql id="WithEmp_Column_List">
    q_id, emp_id, quit_date, quit_type, departure, entering, remarks,
    emp.name, emp.sex, emp.dept_id, emp.job_id, dept.dept_name, job.job_name
  </sql>
  <select id="selectByExample" parameterType="com.neuedu.pojo.QuitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from quit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithEmp" resultMap="WithEmpMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithEmp_Column_List" />
    from quit
    left join emp on quit.emp_id=emp.e_id
    LEFT JOIN dept ON dept.d_id=emp.dept_id
    LEFT JOIN job ON job.j_id=emp.job_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from quit
    where q_id = #{q_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from quit
    where q_id = #{q_id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.pojo.QuitExample">
    delete from quit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.Quit">
    insert into quit (q_id, emp_id, quit_date,
      quit_type, departure, entering, 
      remarks)
    values (#{qId,jdbcType=INTEGER}, #{empId,jdbcType=INTEGER}, #{quitDate,jdbcType=DATE},
      #{quitType,jdbcType=INTEGER}, #{departure,jdbcType=VARCHAR}, #{entering,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.pojo.Quit">
    insert into quit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="q_id != null">
          q_id,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="quitDate != null">
        quit_date,
      </if>
      <if test="quitType != null">
        quit_type,
      </if>
      <if test="departure != null">
        departure,
      </if>
      <if test="entering != null">
        entering,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="qId != null">
        #{qId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="quitDate != null">
        #{quitDate,jdbcType=DATE},
      </if>
      <if test="quitType != null">
        #{quitType,jdbcType=INTEGER},
      </if>
      <if test="departure != null">
        #{departure,jdbcType=VARCHAR},
      </if>
      <if test="entering != null">
        #{entering,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.pojo.QuitExample" resultType="java.lang.Long">
    select count(*) from quit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update quit
    <set>
      <if test="record.qId != null">
        q_id = #{record.qId,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.quitDate != null">
        quit_date = #{record.quitDate,jdbcType=DATE},
      </if>
      <if test="record.quitType != null">
        quit_type = #{record.quitType,jdbcType=INTEGER},
      </if>
      <if test="record.departure != null">
        departure = #{record.departure,jdbcType=VARCHAR},
      </if>
      <if test="record.entering != null">
        entering = #{record.entering,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update quit
    set q_id = #{record.qId,jdbcType=INTEGER},
      emp_id = #{record.empId,jdbcType=INTEGER},
      quit_date = #{record.quitDate,jdbcType=DATE},
      quit_type = #{record.quitType,jdbcType=INTEGER},
      departure = #{record.departure,jdbcType=VARCHAR},
      entering = #{record.entering,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.Quit">
    update quit
    <set>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="quitDate != null">
        quit_date = #{quitDate,jdbcType=DATE},
      </if>
      <if test="quitType != null">
        quit_type = #{quitType,jdbcType=INTEGER},
      </if>
      <if test="departure != null">
        departure = #{departure,jdbcType=VARCHAR},
      </if>
      <if test="entering != null">
        entering = #{entering,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where q_id = #{qId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.Quit">
    update quit
    set emp_id = #{empId,jdbcType=INTEGER},
      quit_date = #{quitDate,jdbcType=DATE},
      quit_type = #{quitType,jdbcType=INTEGER},
      departure = #{departure,jdbcType=VARCHAR},
      entering = #{entering,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR}
    where q_id = #{qId,jdbcType=INTEGER}
  </update>
</mapper>